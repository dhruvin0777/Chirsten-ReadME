Four JOINs in SQL
INNER JOIN: 
Returns records that have matching values in both tables

Table: customers

customer_id | customer_name | city
------------|---------------|------
1           | John          | London
2           | Emily         | Paris
3           | David         | New York

Table: orders

order_id | customer_id | order_date
---------|-------------|-----------
101      | 1           | 2023-05-01
102      | 2           | 2023-05-02
103      | 1           | 2023-05-03
We can use the INNER JOIN to retrieve a result set that combines the customer information with their corresponding orders:

SELECT customers.customer_name, orders.order_id, orders.order_date
FROM customers
INNER JOIN orders ON customers.customer_id = orders.customer_id;

The result of the above query would be:

customer_name | order_id | order_date
--------------|----------|-----------
John          | 101      | 2023-05-01
Emily         | 102      | 2023-05-02
John          | 103      | 2023-05-03

LEFT JOIN:
Returns all records from the left table, and the matched records from the right table

Table: departments

department_id | department_name
--------------|----------------
1             | Sales
2             | Marketing
3             | Finance
Table: employees

employee_id | employee_name | department_id
------------|---------------|--------------
1           | John          | 1
2           | Emily         | 2
3           | David         | 2
We can use the LEFT JOIN to retrieve a result set that combines all the departments with their corresponding employees, if any:

SELECT departments.department_name, employees.employee_name
FROM departments
LEFT JOIN employees ON departments.department_id = employees.department_id;

The result of the above query would be:

department_name | employee_name
----------------|---------------
Sales           | John
Marketing       | Emily
Marketing       | David
Finance         | NULL

RIGHT JOIN:
Returns all records from the right table, and the matched records from the left table

Table: departments

department_id | department_name
--------------|----------------
1             | Sales
2             | Marketing
3             | Finance
Table: employees

employee_id | employee_name | department_id
------------|---------------|--------------
1           | John          | 1
2           | Emily         | 2
3           | David         | 2

We can use the RIGHT JOIN to retrieve a result set that combines all the employees with their corresponding departments, if any:

SELECT departments.department_name, employees.employee_name
FROM departments
RIGHT JOIN employees ON departments.department_id = employees.department_id;

The result of the above query would be:

department_name | employee_name
----------------|---------------
Sales           | John
Marketing       | Emily
Marketing       | David
NULL            | NULL

FULL JOIN: 
Returns all records when there is a match in either left or right table

Table: departments

department_id | department_name
--------------|----------------
1             | Sales
2             | Marketing
3             | Finance
Table: employees

employee_id | employee_name | department_id
------------|---------------|--------------
1           | John          | 1
2           | Emily         | 2
3           | David         | 2
4           | Sarah         | NULL

We can use the FULL JOIN to retrieve a result set that combines all the departments with their corresponding employees, including non-matching records:

SELECT departments.department_name, employees.employee_name
FROM departments
FULL JOIN employees ON departments.department_id = employees.department_id;

The result of the above query would be:

department_name | employee_name
----------------|---------------
Sales           | John
Marketing       | Emily
Marketing       | David
Finance         | NULL
NULL            | Sarah